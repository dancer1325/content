/*                            --  CSS declaration   --               */
/* CSSSelector */
h3 {
  /*CSSProperty: PropertyValue*/
  cOlor: red; /* CSSProperty case insensitive & PropertyValue as keyword */
  background-color: #fF9500; /* PropertyValue case insensitive & PropertyValue as numeric value */
  background-colorR: #ff9500; /* CSSProperty NON existing */
  box-shadow: #3eacb000000; /* PropertyValue NON existing */
  height: calc(10px + 100px); /* PropertyValue as function */
}


/*                          -- 1!CSS ruleset applied to multiple CSSSelectors  --    */
p,
#MyId {
  background: aqua;
}


/*                            --  CSSSelector types   --               */
/* 1.1 Element / Tag selector */
p {
  color: red;
}
a {
  color: blue;
  text-decoration: none;
}

/* 1.2 Id selector */
#MyId {
  color: green;
}

/* 1.3 Class selector */
.class-selector {
  color: black;
}

/* 1.4 Attribute selector */
h2[title] {
  color: dodgerblue;
}

/* 1.5 Pseudo-class selector */
a:hover {
  color: red;
}

a:focus {
  background-color: lightsalmon;
}

a:visited {
  background-color: crimson;
}

/* 1.6 Combinator selector */
/* 1.6.1 Descendant combinator selector */
div p {
  background-color: indigo;
}

/* 1.6.1.1 Descendant combinator selector must not!! be direct descendants  */
div em {
  background-color: teal;
}

/* 1.6.2 Direct descendants  */
span + p {
  font-family: "Arial Hebrew";
}

/* 1.6.3 Adjacent sibling combinator  */
div + a {
  background-color: dodgerblue;
}

/* 1.7 Pseudo-element selector  */
footer::after {
  content: 'Pseudo element after';
}
footer::before {
  content: 'Pseudo element before ';
}


                  /* Combine different type of selectors is possible  */
/* CSSSelector is identified from right --> left */
/* Element which
 1. .special class (Class selector) &
 2. inside of p (descendant combinator selector) &
 3. comes after (adjacent sibling combinator)
   3.1 h2 inside a body (descendant combinator selector) */
body h2 + p .special {
  color: yellow;
  background-color: black;
  padding: 5px;
}


/*                          -- Use Google Fonts  --    */
html {
  font-family: "Open Sans", sans-serif; /* this should be the rest of the output you got from Google Fonts */
}

/*                          -- Center <img>  --    */
/* 1. CSS grid === wrap under container and using a grid */
.container {
  display: grid;
  place-items: center;
  height: 100vh; /* Optional for vertical centering */
}
/* 2.  display in block*/
/*img {
  display: block;
  margin: 0 auto;
}*/

/*                          -- Other styles  --    */
div{
  background-color: fuchsia;
}

body {
  width: 600px;                       /* Force the body's size always */

  /* Passing 2 values -- top and bottom | left and right --
  0     because normally browsers apply default styling to h1*/
  margin: 0 auto;
  background-color: #ff9500;
  padding: 0 20px 20px 20px;          /* Passing 4 values -- top | right | bottom | left -- */
  border: 5px solid black;            /* Passing 3 values -- width | style | color -- */

  /* Passing 4 values, the syntax can be --
  1. offset-x | offset-y | blur-radius | color (Used here)
  2. color | offset-x | offset-y | blur-radius -- */
  text-shadow: 3px 3px 1px black;
}
